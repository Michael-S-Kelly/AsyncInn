// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190408061939_AsyncInnDb2")]
    partial class AsyncInnDb2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "King Bed"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Queen Bed"
                        },
                        new
                        {
                            ID = 3,
                            Name = "60 inch TV"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Mini-Frige"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Hot Tub"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.HasKey("ID");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Miami",
                            Name = "Paris Under The Moon",
                            Phone = "(234) 345-6789",
                            State = "Florida",
                            StreetAddress = "123 Paris Pl N"
                        },
                        new
                        {
                            ID = 2,
                            City = "Las Vegas",
                            Name = "Hotel of the Raising Sun",
                            Phone = "(345) 456-5678",
                            State = "Nevada",
                            StreetAddress = "432 Main Blvd."
                        },
                        new
                        {
                            ID = 3,
                            City = "Hell",
                            Name = "HyWay to Hell",
                            Phone = "(456) 567-6789",
                            State = "Montana",
                            StreetAddress = "962 Hellsgate Way N."
                        },
                        new
                        {
                            ID = 4,
                            City = "Rosswell",
                            Name = "Orion's Retreat",
                            Phone = "(456) 567-6789",
                            State = "New Mexico",
                            StreetAddress = "876 1st AVE SW"
                        },
                        new
                        {
                            ID = 5,
                            City = "New York",
                            Name = "Wallstreet Retreat",
                            Phone = "(567) 678-7890",
                            State = "New York",
                            StreetAddress = "455 Wall St"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID");

                    b.Property<int>("RoomNumber");

                    b.Property<bool>("PetFriendly");

                    b.Property<decimal>("Rate");

                    b.Property<int>("RoomID");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRoom");
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 1,
                            Name = "Honeymoon Suite"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 0,
                            Name = "Kyoto Chambers"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 0,
                            Name = "Harley's Spot"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 2,
                            Name = "Pluto's Dive"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 1,
                            Name = "Port Proxima Centari"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 1,
                            Name = "Bull Room"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.Property<int>("RoomID");

                    b.Property<int>("AmenitiesID");

                    b.HasKey("RoomID", "AmenitiesID");

                    b.HasIndex("AmenitiesID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany("HotelRoom")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("HotelRoom")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenities", "Amenities")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
